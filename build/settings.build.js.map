{"version":3,"file":"settings.build.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAmD;AACd;AAcN;AACa;AAAA;AAsD5C,MAAMmB,uBAAuB,GAAG;EAC9BC,MAAM,EAAEjB,mDAAE,CAAC,uBAAuB,EAAE,YAAY,CAAC;EACjDkB,MAAM,EAAElB,mDAAE,CAAC,QAAQ,EAAE,YAAY,CAAC;EAClCmB,IAAI,EAAEnB,mDAAE,CAAC,WAAW,EAAE,YAAY,CAAC;EACnCoB,QAAQ,EAAEpB,mDAAE,CAAC,UAAU,EAAE,YAAY,CAAC;EACtCqB,IAAI,EAAErB,mDAAE,CAAC,WAAW,EAAE,YAAY,CAAC;EACnCsB,MAAM,EAAEtB,mDAAE,CAAC,eAAe,EAAE,YAAY,CAAC;EACzCuB,KAAK,EAAEvB,mDAAE,CAAC,OAAO,EAAE,YAAY,CAAC;EAChCwB,KAAK,EAAExB,mDAAE,CAAC,aAAa,EAAE,YAAY,CAAC;EACtCyB,SAAS,EAAEzB,mDAAE,CAAC,eAAe,EAAE,YAAY,CAAC;EAC5C0B,SAAS,EAAE1B,mDAAE,CAAC,eAAe,EAAE,YAAY,CAAC;EAC5C2B,OAAO,EAAE3B,mDAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACpC4B,MAAM,EAAE5B,mDAAE,CAAC,QAAQ,EAAE,YAAY,CAAC;EAClC6B,MAAM,EAAE7B,mDAAE,CAAC,QAAQ,EAAE,YAAY,CAAC;EAClC8B,KAAK,EAAE9B,mDAAE,CAAC,OAAO,EAAE,YAAY,CAAC;EAChC+B,MAAM,EAAE/B,mDAAE,CAAC,QAAQ,EAAE,YAAY;AACnC,CAAC;AAED,MAAMgC,mBAAmB,GAAG;EAC1BC,MAAM,EAAEjC,mDAAE,CAAC,QAAQ,EAAE,YAAY,CAAC;EAClCkC,UAAU,EAAElC,mDAAE,CAAC,YAAY,EAAE,YAAY,CAAC;EAC1CmC,QAAQ,EAAEnC,mDAAE,CAAC,UAAU,EAAE,YAAY,CAAC;EACtCoC,YAAY,EAAEpC,mDAAE,CAAC,cAAc,EAAE,YAAY,CAAC;EAC9CqC,SAAS,EAAErC,mDAAE,CAAC,WAAW,EAAE,YAAY;AACzC,CAAC;AAED,MAAMsC,YAAsB,GAAGA,CAAA,KAAM;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,+CAAQ,CAAW;IACjD0C,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,KAAK;MACjBC,gBAAgB,EAAE,EAAE;MACpBC,eAAe,EAAE,EAAE;MACnBC,aAAa,EAAE,QAAQ;MACvBC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,MAAM;MACnBC,aAAa,EAAE;IACjB;EACF,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGxD,+CAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyD,QAAQ,EAAEC,WAAW,CAAC,GAAG1D,+CAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC2D,OAAO,EAAEC,UAAU,CAAC,GAAG5D,+CAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6D,KAAK,EAAEC,QAAQ,CAAC,GAAG9D,+CAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC+D,cAAc,EAAEC,iBAAiB,CAAC,GAAGhE,+CAAQ,CAAiB;IACnEiE,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,CAAC;EAChB,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGvE,+CAAQ,CAAgB,IAAI,CAAC;EAErED,gDAAS,CAAC,MAAM;IACd,MAAMyE,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChChB,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMiB,QAAQ,GAAG,MAAM7D,2DAAQ,CAAC;UAC9B8D,IAAI,EAAE;QACR,CAAC,CAAqB;QAEtB,MAAMC,iBAAiB,GAAGF,QAAQ,CAACG,mBAAmB;QACtDnC,WAAW,CAACkC,iBAAiB,CAAC;MAChC,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZf,QAAQ,CAAC7D,mDAAE,CAAC,yBAAyB,EAAE,YAAY,CAAC,CAAC;QACrD6E,OAAO,CAACjB,KAAK,CAAC,yBAAyB,EAAEgB,GAAG,CAAC;MAC/C,CAAC,SAAS;QACRrB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDgB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BrB,WAAW,CAAC,IAAI,CAAC;IACjBE,UAAU,CAAC,EAAE,CAAC;IACdE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF;MACA,MAAMkB,iBAAiB,GAAG,MAAMpE,2DAAQ,CAAC;QACvC8D,IAAI,EAAE,wBAAwB;QAC9BO,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UAAEA,IAAI,EAAE1C,QAAQ,CAACK;QAAa;MACtC,CAAC,CAAuB;;MAExB;MACA,MAAMsC,cAAc,GAAG;QACrB,GAAG3C,QAAQ;QACXK,YAAY,EAAEmC,iBAAiB,CAACE;MAClC,CAAC;MAED,MAAMT,QAAQ,GAAG,MAAM7D,2DAAQ,CAAC;QAC9B8D,IAAI,EAAE,iBAAiB;QACvBO,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UACJN,mBAAmB,EAAEO;QACvB;MACF,CAAC,CAAC;MAEFvB,UAAU,CAAC3D,mDAAE,CAAC,6BAA6B,EAAE,YAAY,CAAC,CAAC;MAC3D6E,OAAO,CAACM,GAAG,CAAC,iBAAiB,EAAEX,QAAQ,CAAC;IAC1C,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZf,QAAQ,CAAC7D,mDAAE,CAAC,yBAAyB,EAAE,YAAY,CAAC,CAAC;MACrD6E,OAAO,CAACjB,KAAK,CAAC,wBAAwB,EAAEgB,GAAG,CAAC;IAC9C,CAAC,SAAS;MACRnB,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAM2B,YAAY,GAAGA,CAAA,KAAM;IACzB5C,WAAW,CAAC6C,IAAI,IAAI;MAClB,MAAMC,iBAAiB,GAAGD,IAAI,CAACxC,cAAc,EAAEC,UAAU,IAAI,EAAE;MAC/D,OAAO;QACL,GAAGuC,IAAI;QACPxC,cAAc,EAAE;UACd,IAAIwC,IAAI,CAACxC,cAAc,IAAI;YACzBE,UAAU,EAAE,KAAK;YACjBC,gBAAgB,EAAE,EAAE;YACpBC,eAAe,EAAE,EAAE;YACnBC,aAAa,EAAE,QAAQ;YACvBC,SAAS,EAAE,EAAE;YACbC,WAAW,EAAE,MAAM;YACnBC,aAAa,EAAE;UACjB,CAAC,CAAC;UACFP,UAAU,EAAE,CACV,GAAGwC,iBAAiB,EACpB;YAAEC,GAAG,EAAE,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAS,CAAC;QAE9C;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,eAAe,GAAIC,KAAa,IAAK;IACzCnD,WAAW,CAAC6C,IAAI,IAAI;MAClB,MAAMC,iBAAiB,GAAGD,IAAI,CAACxC,cAAc,EAAEC,UAAU,IAAI,EAAE;MAC/D,OAAO;QACL,GAAGuC,IAAI;QACPxC,cAAc,EAAE;UACd,IAAIwC,IAAI,CAACxC,cAAc,IAAI;YACzBE,UAAU,EAAE,KAAK;YACjBC,gBAAgB,EAAE,EAAE;YACpBC,eAAe,EAAE,EAAE;YACnBC,aAAa,EAAE,QAAQ;YACvBC,SAAS,EAAE,EAAE;YACbC,WAAW,EAAE,MAAM;YACnBC,aAAa,EAAE;UACjB,CAAC,CAAC;UACFP,UAAU,EAAEwC,iBAAiB,CAACM,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK;QAC5D;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,eAAe,GAAGA,CAACJ,KAAa,EAAEK,KAAsB,EAAER,KAAa,KAAK;IAChFhD,WAAW,CAAC6C,IAAI,IAAI;MAClB,MAAMC,iBAAiB,GAAGD,IAAI,CAACxC,cAAc,EAAEC,UAAU,IAAI,EAAE;MAC/D,OAAO;QACL,GAAGuC,IAAI;QACPxC,cAAc,EAAE;UACd,IAAIwC,IAAI,CAACxC,cAAc,IAAI;YACzBE,UAAU,EAAE,KAAK;YACjBC,gBAAgB,EAAE,EAAE;YACpBC,eAAe,EAAE,EAAE;YACnBC,aAAa,EAAE,QAAQ;YACvBC,SAAS,EAAE,EAAE;YACbC,WAAW,EAAE,MAAM;YACnBC,aAAa,EAAE;UACjB,CAAC,CAAC;UACFP,UAAU,EAAEwC,iBAAiB,CAACW,GAAG,CAAC,CAACC,SAAS,EAAEJ,CAAC,KAC7CA,CAAC,KAAKH,KAAK,GAAG;YAAE,GAAGO,SAAS;YAAE,CAACF,KAAK,GAAGR;UAAM,CAAC,GAAGU,SACnD;QACF;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B1C,WAAW,CAAC,IAAI,CAAC;IACjBE,UAAU,CAAC,EAAE,CAAC;IACdE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAM7D,2DAAQ,CAAC;QAC9B8D,IAAI,EAAE,+BAA+B;QACrCO,MAAM,EAAE;MACV,CAAC,CAAC;MAEFrB,UAAU,CAAC3D,mDAAE,CAAC,2BAA2B,EAAE,YAAY,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAO4E,GAAG,EAAE;MACZf,QAAQ,CAAC7D,mDAAE,CAAC,sBAAsB,EAAE,YAAY,CAAC,CAAC;MAClD6E,OAAO,CAACjB,KAAK,CAAC,sBAAsB,EAAEgB,GAAG,CAAC;IAC5C,CAAC,SAAS;MACRnB,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAM2C,mBAAmB,GAAG,MAAO/E,IAA+C,IAAK;IACrF,IAAI,CAACkB,QAAQ,CAACE,QAAQ,IAAI,CAACF,QAAQ,CAACI,YAAY,IAAI,CAACJ,QAAQ,CAACK,YAAY,EAAE;MAC1EiB,QAAQ,CAAC7D,mDAAE,CAAC,qCAAqC,EAAE,YAAY,CAAC,CAAC;MACjE;IACF;IAEAsE,eAAe,CAACjD,IAAI,CAAC;IACrB,IAAI;MACF,IAAIgF,QAAQ,GAAG,EAAE;MACjB,QAAQhF,IAAI;QACV,KAAK,YAAY;UACfgF,QAAQ,GAAG,uBAAuB;UAClC;QACF,KAAK,YAAY;UACfA,QAAQ,GAAG,uBAAuB;UAClC;QACF,KAAK,UAAU;UACbA,QAAQ,GAAG,qBAAqB;UAChC;QACF,KAAK,OAAO;UACVA,QAAQ,GAAG,kBAAkB;UAC7B;MACJ;MAEA,MAAM7B,QAAQ,GAAG,MAAM7D,2DAAQ,CAAC;QAC9B8D,IAAI,EAAE,iBAAiB4B,QAAQ,EAAE;QACjCrB,MAAM,EAAE;MACV,CAAC,CAAgB;MAEjB,IAAIR,QAAQ,CAAC8B,OAAO,IAAIC,KAAK,CAACC,OAAO,CAAChC,QAAQ,CAACS,IAAI,CAAC,EAAE;QACpDlB,iBAAiB,CAACsB,IAAI,KAAK;UACzB,GAAGA,IAAI;UACP,CAAChE,IAAI,GAAGmD,QAAQ,CAACS,IAAI;UACrBb,WAAW,EAAE;YACX,GAAGiB,IAAI,CAACjB,WAAW;YACnB,CAAC/C,IAAI,GAAG,IAAIoF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;UACjC;QACF,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC,OAAO9B,GAAG,EAAE;MACZf,QAAQ,CAAC7D,mDAAE,CAAC,mBAAmBqB,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;MACrDwD,OAAO,CAACjB,KAAK,CAAC,kBAAkBvC,IAAI,GAAG,EAAEuD,GAAG,CAAC;IAC/C,CAAC,SAAS;MACRN,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAED,MAAMqC,YAAY,GAAIX,KAAa,IAAuD;IACxF,QAAQA,KAAK;MACX,KAAK,MAAM;QACT,OAAO,YAAY;MACrB,KAAK,UAAU;QACb,OAAO,YAAY;MACrB,KAAK,QAAQ;QACX,OAAO,UAAU;MACnB,KAAK,MAAM;QACT,OAAO,OAAO;MAChB;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,MAAMY,kBAAkB,GAAIZ,KAAa,IAAyC;IAChF,QAAQA,KAAK;MACX,KAAK,MAAM;QACT,OAAOlC,cAAc,CAACE,UAAU,CAACiC,GAAG,CAACT,KAAK,KAAK;UAAEqB,KAAK,EAAErB,KAAK;UAAEA;QAAM,CAAC,CAAC,CAAC;MAC1E,KAAK,UAAU;QACb,OAAO1B,cAAc,CAACG,UAAU,CAACgC,GAAG,CAACT,KAAK,KAAK;UAAEqB,KAAK,EAAErB,KAAK;UAAEA;QAAM,CAAC,CAAC,CAAC;MAC1E,KAAK,QAAQ;QACX,OAAO1B,cAAc,CAACI,QAAQ,CAAC+B,GAAG,CAACT,KAAK,KAAK;UAAEqB,KAAK,EAAErB,KAAK;UAAEA;QAAM,CAAC,CAAC,CAAC;MACxE,KAAK,MAAM;QACT,OAAO1B,cAAc,CAACK,KAAK,CAAC8B,GAAG,CAACT,KAAK,KAAK;UAAEqB,KAAK,EAAErB,KAAK;UAAEA;QAAM,CAAC,CAAC,CAAC;MACrE;QACE,OAAO,EAAE;IACb;EACF,CAAC;EAED,MAAMsB,cAAc,GAAId,KAAa,IAAK;IACxC,MAAM3E,IAAI,GAAGsF,YAAY,CAACX,KAAK,CAAC;IAChC,IAAI,CAAC3E,IAAI,EAAE,OAAOrB,mDAAE,CAAC,OAAO,EAAE,YAAY,CAAC;IAC3C,MAAM+G,IAAI,GAAGjD,cAAc,CAACM,WAAW,CAAC/C,IAAI,CAAC;IAC7C,IAAI,CAAC0F,IAAI,EAAE,OAAO/G,mDAAE,CAAC,OAAO,EAAE,YAAY,CAAC;IAC3C,OAAO,IAAIyG,IAAI,CAACM,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;EACxC,CAAC;EAED,IAAI1D,SAAS,EAAE;IACb,oBAAOzC,sDAAA;MAAAoG,QAAA,EAAMjH,mDAAE,CAAC,YAAY,EAAE,YAAY;IAAC,CAAM,CAAC;EACpD;EAEA,oBACEe,uDAAA;IAAKmG,SAAS,EAAC,+BAA+B;IAAAD,QAAA,gBAC5CpG,sDAAA;MAAAoG,QAAA,EAAKjH,mDAAE,CAAC,qBAAqB,EAAE,YAAY;IAAC,CAAK,CAAC,EAEjD0D,OAAO,iBACN7C,sDAAA,CAACN,yDAAM;MAACW,MAAM,EAAC,SAAS;MAACiG,aAAa;MAACC,SAAS,EAAEA,CAAA,KAAMzD,UAAU,CAAC,EAAE,CAAE;MAAAsD,QAAA,EACpEvD;IAAO,CACF,CACT,EAEAE,KAAK,iBACJ/C,sDAAA,CAACN,yDAAM;MAACW,MAAM,EAAC,OAAO;MAACiG,aAAa;MAACC,SAAS,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,EAAE,CAAE;MAAAoD,QAAA,EAChErD;IAAK,CACA,CACT,eAED/C,sDAAA,CAACZ,wDAAK;MAACoH,MAAM,EAAC,UAAU;MAAAJ,QAAA,eACtBlG,uDAAA,CAAClB,uDAAc;QAAAoH,QAAA,gBACblG,uDAAA,CAACb,4DAAS;UACRqH,KAAK,EAAEvH,mDAAE,CAAC,cAAc,EAAE,YAAY,CAAE;UACxCwH,WAAW,EAAE,IAAK;UAAAP,QAAA,gBAElBpG,sDAAA,CAACV,2DAAQ;YAAA8G,QAAA,eACPpG,sDAAA,CAACR,6EAAY;cACXoH,qBAAqB;cACrBZ,KAAK,EAAE7G,mDAAE,CAAC,UAAU,EAAE,YAAY,CAAE;cACpCwF,KAAK,EAAEjD,QAAQ,CAACE,QAAS;cACzBiF,QAAQ,EAAGlC,KAAK,IACdhD,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEE,QAAQ,EAAE+C,KAAK,IAAI;cAAG,CAAC,CACnD;cACDmC,IAAI,EAAE3H,mDAAE,CACN,wEAAwE,EACxE,YACF,CAAE;cACF4H,KAAK,EAAE;gBAAE9F,KAAK,EAAE;cAAQ;YAAE,CAC3B;UAAC,CACM,CAAC,eACXjB,sDAAA,CAACV,2DAAQ;YAAA8G,QAAA,eACPpG,sDAAA,CAACR,6EAAY;cACXoH,qBAAqB;cACrBZ,KAAK,EAAE7G,mDAAE,CAAC,cAAc,EAAE,YAAY,CAAE;cACxCwF,KAAK,EAAEjD,QAAQ,CAACG,YAAa;cAC7BgF,QAAQ,EAAGlC,KAAK,IACdhD,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEG,YAAY,EAAE8C,KAAK,IAAI;cAAG,CAAC,CACvD;cACDoC,KAAK,EAAE;gBAAE9F,KAAK,EAAE;cAAQ;YAAE,CAC3B;UAAC,CACM,CAAC,eACXjB,sDAAA,CAACV,2DAAQ;YAAA8G,QAAA,eACPpG,sDAAA,CAACR,6EAAY;cACXoH,qBAAqB;cACrBZ,KAAK,EAAE7G,mDAAE,CAAC,cAAc,EAAE,YAAY,CAAE;cACxCwF,KAAK,EAAEjD,QAAQ,CAACI,YAAa;cAC7B+E,QAAQ,EAAGlC,KAAK,IACdhD,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEI,YAAY,EAAE6C,KAAK,IAAI;cAAG,CAAC,CACvD;cACDoC,KAAK,EAAE;gBAAE9F,KAAK,EAAE;cAAQ;YAAE,CAC3B;UAAC,CACM,CAAC,eACXjB,sDAAA,CAACV,2DAAQ;YAAA8G,QAAA,eACPpG,sDAAA,CAACR,6EAAY;cACXoH,qBAAqB;cACrBZ,KAAK,EAAE7G,mDAAE,CAAC,cAAc,EAAE,YAAY,CAAE;cACxCqB,IAAI,EAAC,UAAU;cACfmE,KAAK,EAAEjD,QAAQ,CAACK,YAAa;cAC7B8E,QAAQ,EAAGlC,KAAK,IACdhD,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEK,YAAY,EAAE4C,KAAK,IAAI;cAAG,CAAC,CACvD;cACDoC,KAAK,EAAE;gBAAE9F,KAAK,EAAE;cAAQ;YAAE,CAC3B;UAAC,CACM,CAAC;QAAA,CACF,CAAC,eAEZf,uDAAA,CAACb,4DAAS;UACRqH,KAAK,EAAEvH,mDAAE,CAAC,yBAAyB,EAAE,YAAY,CAAE;UACnDwH,WAAW,EAAE,IAAK;UAAAP,QAAA,gBAElBlG,uDAAA;YAAKmG,SAAS,EAAC,uBAAuB;YAAAD,QAAA,gBACpCpG,sDAAA;cAAAoG,QAAA,EAAKjH,mDAAE,CAAC,iBAAiB,EAAE,YAAY;YAAC,CAAK,CAAC,eAC9Ca,sDAAA,CAACJ,+DAAY;cACXoG,KAAK,EAAE7G,mDAAE,CAAC,YAAY,EAAE,YAAY,CAAE;cACtC6H,QAAQ,EAAEtF,QAAQ,CAACM,cAAc,EAAEE,UAAU,IAAI,KAAM;cACvD+E,OAAO,EAAE,CACP;gBAAEjB,KAAK,EAAE7G,mDAAE,CAAC,4BAA4B,EAAE,YAAY,CAAC;gBAAEwF,KAAK,EAAE;cAAM,CAAC,EACvE;gBAAEqB,KAAK,EAAE7G,mDAAE,CAAC,2BAA2B,EAAE,YAAY,CAAC;gBAAEwF,KAAK,EAAE;cAAM,CAAC,CACtE;cACFkC,QAAQ,EAAGlC,KAAK,IAAKhD,WAAW,CAAC6C,IAAI,KAAK;gBACxC,GAAGA,IAAI;gBACPxC,cAAc,EAAE;kBACd,IAAIwC,IAAI,CAACxC,cAAc,IAAI;oBACzBC,UAAU,EAAE,EAAE;oBACdC,UAAU,EAAE,KAAK;oBACjBC,gBAAgB,EAAE,EAAE;oBACpBC,eAAe,EAAE,EAAE;oBACnBC,aAAa,EAAE,QAAQ;oBACvBC,SAAS,EAAE,EAAE;oBACbC,WAAW,EAAE,MAAM;oBACnBC,aAAa,EAAE;kBACjB,CAAC,CAAC;kBACFN,UAAU,EAAEyC;gBACd;cACF,CAAC,CAAC;YAAE,CACL,CAAC,eAEF3E,sDAAA;cAAKqG,SAAS,EAAC,4BAA4B;cAAAD,QAAA,EACxC,CAAC1E,QAAQ,CAACM,cAAc,EAAEC,UAAU,IAAI,EAAE,EAAEmD,GAAG,CAAC,CAACC,SAAS,EAAEP,KAAK,kBAChE9E,sDAAA;gBAAiBqG,SAAS,EAAC,sBAAsB;gBAAAD,QAAA,eAC/ClG,uDAAA;kBAAKmG,SAAS,EAAC,6BAA6B;kBAAAD,QAAA,gBAC1CpG,sDAAA,CAACL,gEAAa;oBACZqG,KAAK,EAAE7G,mDAAE,CAAC,OAAO,EAAE,YAAY,CAAE;oBACjCwF,KAAK,EAAEU,SAAS,CAACX,GAAI;oBACrBuC,OAAO,EAAE,CACP;sBAAEjB,KAAK,EAAE7G,mDAAE,CAAC,gBAAgB,EAAE,YAAY,CAAC;sBAAEwF,KAAK,EAAE;oBAAG,CAAC,EACxD,GAAGuC,MAAM,CAACC,OAAO,CAAChH,uBAAuB,CAAC,CAACiF,GAAG,CAAC,CAAC,CAACV,GAAG,EAAEsB,KAAK,CAAC,MAAM;sBAChEA,KAAK;sBACLrB,KAAK,EAAED;oBACT,CAAC,CAAC,CAAC,CACH;oBACFmC,QAAQ,EAAGlC,KAAK,IAAKO,eAAe,CAACJ,KAAK,EAAE,KAAK,EAAEH,KAAK;kBAAE,CAC3D,CAAC,eACF3E,sDAAA,CAACL,gEAAa;oBACZqG,KAAK,EAAE7G,mDAAE,CAAC,UAAU,EAAE,YAAY,CAAE;oBACpCwF,KAAK,EAAEU,SAAS,CAACT,QAAS;oBAC1BqC,OAAO,EAAE,CACP;sBAAEjB,KAAK,EAAE7G,mDAAE,CAAC,oBAAoB,EAAE,YAAY,CAAC;sBAAEwF,KAAK,EAAE;oBAAG,CAAC,EAC5D,GAAGuC,MAAM,CAACC,OAAO,CAAChG,mBAAmB,CAAC,CAACiE,GAAG,CAAC,CAAC,CAACV,GAAG,EAAEsB,KAAK,CAAC,MAAM;sBAC5DA,KAAK;sBACLrB,KAAK,EAAED;oBACT,CAAC,CAAC,CAAC,CACH;oBACFmC,QAAQ,EAAGlC,KAAK,IAAKO,eAAe,CAACJ,KAAK,EAAE,UAAU,EAAEH,KAAK;kBAAE,CAChE,CAAC,eACFzE,uDAAA;oBAAKmG,SAAS,EAAC,4BAA4B;oBAAAD,QAAA,gBACzCpG,sDAAA,CAACL,gEAAa;sBACZqG,KAAK,EAAE7G,mDAAE,CAAC,OAAO,EAAE,YAAY,CAAE;sBACjCwF,KAAK,EAAEU,SAAS,CAACV,KAAM;sBACvBsC,OAAO,EAAE,CACP;wBAAEjB,KAAK,EAAE7G,mDAAE,CAAC,gBAAgB,EAAE,YAAY,CAAC;wBAAEwF,KAAK,EAAE;sBAAG,CAAC,EACxD,GAAGoB,kBAAkB,CAACV,SAAS,CAACX,GAAG,CAAC,CACpC;sBACFmC,QAAQ,EAAGlC,KAAK,IAAKO,eAAe,CAACJ,KAAK,EAAE,OAAO,EAAEH,KAAK;oBAAE,CAC7D,CAAC,EACD,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,CAAC,CAACyC,QAAQ,CAAC/B,SAAS,CAACX,GAAG,CAAC,iBAC7DxE,uDAAA;sBAAKmG,SAAS,EAAC,oCAAoC;sBAAAD,QAAA,gBACjDpG,sDAAA,CAACP,yDAAM;wBACL4H,OAAO;wBACPC,OAAO,EAAEA,CAAA,KAAM;0BACb,MAAM9G,IAAI,GAAGsF,YAAY,CAACT,SAAS,CAACX,GAAG,CAAC;0BACxC,IAAIlE,IAAI,EAAE;4BACR+E,mBAAmB,CAAC/E,IAAI,CAAC;0BAC3B;wBACF,CAAE;wBACF+G,QAAQ,EAAE/D,YAAY,KAAKsC,YAAY,CAACT,SAAS,CAACX,GAAG,CAAE;wBAAA0B,QAAA,EAEtD5C,YAAY,KAAKsC,YAAY,CAACT,SAAS,CAACX,GAAG,CAAC,gBAC3C1E,sDAAA,CAACH,0DAAO,IAAE,CAAC,GAEXV,mDAAE,CAAC,SAAS,EAAE,YAAY;sBAC3B,CACK,CAAC,eACTe,uDAAA;wBAAMmG,SAAS,EAAC,yBAAyB;wBAAAD,QAAA,GACtCjH,mDAAE,CAAC,eAAe,EAAE,YAAY,CAAC,EAAC,GAAC,EAAC8G,cAAc,CAACZ,SAAS,CAACX,GAAG,CAAC;sBAAA,CAC9D,CAAC;oBAAA,CACJ,CACN;kBAAA,CACE,CAAC,eACN1E,sDAAA,CAACP,yDAAM;oBACL+H,aAAa;oBACbF,OAAO,EAAEA,CAAA,KAAMzC,eAAe,CAACC,KAAK,CAAE;oBACtCuB,SAAS,EAAC,6BAA6B;oBAAAD,QAAA,EAEtCjH,mDAAE,CAAC,QAAQ,EAAE,YAAY;kBAAC,CACrB,CAAC;gBAAA,CACN;cAAC,GAnEE2F,KAoEL,CACN;YAAC,CACC,CAAC,eAEN9E,sDAAA,CAACP,yDAAM;cACLgI,SAAS;cACTH,OAAO,EAAE/C,YAAa;cACtB8B,SAAS,EAAC,0BAA0B;cAAAD,QAAA,EAEnCjH,mDAAE,CAAC,eAAe,EAAE,YAAY;YAAC,CAC5B,CAAC;UAAA,CACN,CAAC,eAENe,uDAAA;YAAKmG,SAAS,EAAC,oBAAoB;YAAAD,QAAA,gBACjCpG,sDAAA;cAAAoG,QAAA,EAAKjH,mDAAE,CAAC,oBAAoB,EAAE,YAAY;YAAC,CAAK,CAAC,eACjDa,sDAAA,CAACR,6EAAY;cACXoH,qBAAqB;cACrBZ,KAAK,EAAE7G,mDAAE,CAAC,kBAAkB,EAAE,YAAY,CAAE;cAC5CwF,KAAK,EAAEjD,QAAQ,CAACM,cAAc,EAAEG,gBAAgB,IAAI,EAAG;cACvD0E,QAAQ,EAAGlC,KAAK,IAAKhD,WAAW,CAAC6C,IAAI,KAAK;gBACxC,GAAGA,IAAI;gBACPxC,cAAc,EAAE;kBACd,GAAGwC,IAAI,CAACxC,cAAe;kBACvBG,gBAAgB,EAAEwC,KAAK,IAAI;gBAC7B;cACF,CAAC,CAAC,CAAE;cACJmC,IAAI,EAAE3H,mDAAE,CAAC,wCAAwC,EAAE,YAAY;YAAE,CAClE,CAAC,eACFa,sDAAA,CAACR,6EAAY;cACXoH,qBAAqB;cACrBZ,KAAK,EAAE7G,mDAAE,CAAC,iBAAiB,EAAE,YAAY,CAAE;cAC3CwF,KAAK,EAAEjD,QAAQ,CAACM,cAAc,EAAEI,eAAe,IAAI,EAAG;cACtDyE,QAAQ,EAAGlC,KAAK,IAAKhD,WAAW,CAAC6C,IAAI,KAAK;gBACxC,GAAGA,IAAI;gBACPxC,cAAc,EAAE;kBACd,GAAGwC,IAAI,CAACxC,cAAe;kBACvBI,eAAe,EAAEuC,KAAK,IAAI;gBAC5B;cACF,CAAC,CAAC,CAAE;cACJmC,IAAI,EAAE3H,mDAAE,CAAC,uCAAuC,EAAE,YAAY;YAAE,CACjE,CAAC;UAAA,CACC,CAAC,eAENe,uDAAA;YAAKmG,SAAS,EAAC,qBAAqB;YAAAD,QAAA,gBAClCpG,sDAAA;cAAAoG,QAAA,EAAKjH,mDAAE,CAAC,eAAe,EAAE,YAAY;YAAC,CAAK,CAAC,eAC5Ca,sDAAA,CAACL,gEAAa;cACZqG,KAAK,EAAE7G,mDAAE,CAAC,eAAe,EAAE,YAAY,CAAE;cACzCwF,KAAK,EAAEjD,QAAQ,CAACM,cAAc,EAAEK,aAAa,IAAI,QAAS;cAC1D4E,OAAO,EAAE,CACP;gBAAEjB,KAAK,EAAE7G,mDAAE,CAAC,QAAQ,EAAE,YAAY,CAAC;gBAAEwF,KAAK,EAAE;cAAS,CAAC,EACtD;gBAAEqB,KAAK,EAAE7G,mDAAE,CAAC,OAAO,EAAE,YAAY,CAAC;gBAAEwF,KAAK,EAAE;cAAQ,CAAC,EACpD;gBAAEqB,KAAK,EAAE7G,mDAAE,CAAC,QAAQ,EAAE,YAAY,CAAC;gBAAEwF,KAAK,EAAE;cAAS,CAAC,CACtD;cACFkC,QAAQ,EAAGlC,KAAK,IAAKhD,WAAW,CAAC6C,IAAI,KAAK;gBACxC,GAAGA,IAAI;gBACPxC,cAAc,EAAE;kBACd,GAAGwC,IAAI,CAACxC,cAAe;kBACvBK,aAAa,EAAEsC;gBACjB;cACF,CAAC,CAAC;YAAE,CACL,CAAC;UAAA,CACC,CAAC,eAENzE,uDAAA;YAAKmG,SAAS,EAAC,mBAAmB;YAAAD,QAAA,gBAChCpG,sDAAA;cAAAoG,QAAA,EAAKjH,mDAAE,CAAC,aAAa,EAAE,YAAY;YAAC,CAAK,CAAC,eAC1Ce,uDAAA;cAAAkG,QAAA,GACGjH,mDAAE,CAAC,YAAY,EAAE,YAAY,CAAC,EAAC,GAAC,EAACuC,QAAQ,CAACM,cAAc,EAAEM,SAAS,IAAInD,mDAAE,CAAC,OAAO,EAAE,YAAY,CAAC;YAAA,CAChG,CAAC,eACJe,uDAAA;cAAAkG,QAAA,GACGjH,mDAAE,CAAC,SAAS,EAAE,YAAY,CAAC,EAAC,GAAC,EAACuC,QAAQ,CAACM,cAAc,EAAEO,WAAW,IAAI,MAAM;YAAA,CAC5E,CAAC,EACHb,QAAQ,CAACM,cAAc,EAAEQ,aAAa,iBACrCxC,sDAAA,CAACN,yDAAM;cAACW,MAAM,EAAC,OAAO;cAACiG,aAAa,EAAE,KAAM;cAAAF,QAAA,EACzC1E,QAAQ,CAACM,cAAc,CAACQ;YAAa,CAChC,CACT;UAAA,CACE,CAAC;QAAA,CACG,CAAC;MAAA,GA1OM,GA2OJ;IAAC,CACZ,CAAC,eAERtC,uDAAA;MAAKmG,SAAS,EAAC,oBAAoB;MAAAD,QAAA,gBACjCpG,sDAAA,CAACP,yDAAM;QAACiI,OAAO,EAAC,SAAS;QAACJ,OAAO,EAAErD,UAAW;QAACsD,QAAQ,EAAE5E,QAAS;QAAAyD,QAAA,EAC/DzD,QAAQ,GACLxD,mDAAE,CAAC,WAAW,EAAE,YAAY,CAAC,GAC7BA,mDAAE,CAAC,eAAe,EAAE,YAAY;MAAC,CAC/B,CAAC,eACTa,sDAAA,CAACP,yDAAM;QAACiI,OAAO,EAAC,WAAW;QAACJ,OAAO,EAAEhC,WAAY;QAACiC,QAAQ,EAAE5E,QAAS;QAAAyD,QAAA,EAClEzD,QAAQ,GACLxD,mDAAE,CAAC,kBAAkB,EAAE,YAAY,CAAC,GACpCA,mDAAE,CAAC,UAAU,EAAE,YAAY;MAAC,CAC1B,CAAC;IAAA,CACN,CAAC;EAAA,CACH,CAAC;AAEV,CAAC;AAED,iEAAesC,YAAY;;;;;;;;;;ACxnB3B;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACN0B;AACsB;AACd;AAAA;AAElCoG,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,MAAMC,SAAS,GAAGF,QAAQ,CAACG,cAAc,CAAC,0BAA0B,CAAC;EACrE,IAAID,SAAS,EAAE;IACb,MAAME,IAAI,GAAGN,8DAAU,CAACI,SAAS,CAAC;IAClCE,IAAI,CAACC,MAAM,cAAClI,sDAAA,CAAC4H,iDAAQ,IAAE,CAAC,CAAC;EAC3B;AACF,CAAC,CAAC,C","sources":["webpack://spire-sync/./src/admin/settings/Settings.tsx","webpack://spire-sync/external window [\"wp\",\"apiFetch\"]","webpack://spire-sync/external window [\"wp\",\"components\"]","webpack://spire-sync/external window [\"wp\",\"element\"]","webpack://spire-sync/external window [\"wp\",\"i18n\"]","webpack://spire-sync/external window \"React\"","webpack://spire-sync/external window \"ReactJSXRuntime\"","webpack://spire-sync/webpack/bootstrap","webpack://spire-sync/webpack/runtime/compat get default export","webpack://spire-sync/webpack/runtime/define property getters","webpack://spire-sync/webpack/runtime/hasOwnProperty shorthand","webpack://spire-sync/webpack/runtime/make namespace object","webpack://spire-sync/./src/admin/settings/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { __ } from \"@wordpress/i18n\";\nimport {\n  Panel,\n  PanelBody,\n  PanelRow,\n  __experimentalInputControl as InputControl,\n  Button,\n  Notice,\n  SelectControl,\n  RadioControl,\n  Card,\n  CardHeader,\n  CardBody,\n  Spinner,\n} from \"@wordpress/components\";\nimport apiFetch from \"@wordpress/api-fetch\";\n\ninterface Condition {\n  key: string;\n  value: string;\n  operator: string;\n}\n\ninterface InventorySyncSettings {\n  conditions: Condition[];\n  match_type: 'all' | 'any';\n  warehouse_filter: string;\n  category_filter: string;\n  sync_interval: 'hourly' | 'daily' | 'weekly';\n  last_sync: string;\n  sync_status: 'idle' | 'running' | 'error';\n  error_message: string;\n}\n\ninterface Settings {\n  base_url: string;\n  company_name: string;\n  api_username: string;\n  api_password: string;\n  inventory_sync?: InventorySyncSettings;\n}\n\ninterface SettingsResponse {\n  spire_sync_settings: Settings;\n}\n\ninterface EncryptionResponse {\n  success: boolean;\n  data: string;\n}\n\ninterface DynamicOptions {\n  warehouses: string[];\n  categories: string[];\n  statuses: string[];\n  types: string[];\n  lastUpdated: {\n    warehouses?: string;\n    categories?: string;\n    statuses?: string;\n    types?: string;\n  };\n}\n\ninterface ApiResponse {\n  success: boolean;\n  data: any;\n}\n\nconst INVENTORY_FILTER_FIELDS = {\n  upload: __('Upload to WooCommerce', 'spire-sync'),\n  status: __('Status', 'spire-sync'),\n  whse: __('Warehouse', 'spire-sync'),\n  category: __('Category', 'spire-sync'),\n  type: __('Item Type', 'spire-sync'),\n  active: __('Active Status', 'spire-sync'),\n  price: __('Price', 'spire-sync'),\n  stock: __('Stock Level', 'spire-sync'),\n  min_stock: __('Minimum Stock', 'spire-sync'),\n  max_stock: __('Maximum Stock', 'spire-sync'),\n  taxable: __('Taxable', 'spire-sync'),\n  weight: __('Weight', 'spire-sync'),\n  length: __('Length', 'spire-sync'),\n  width: __('Width', 'spire-sync'),\n  height: __('Height', 'spire-sync')\n};\n\nconst CONDITION_OPERATORS = {\n  equals: __('Equals', 'spire-sync'),\n  not_equals: __('Not Equals', 'spire-sync'),\n  contains: __('Contains', 'spire-sync'),\n  greater_than: __('Greater Than', 'spire-sync'),\n  less_than: __('Less Than', 'spire-sync')\n};\n\nconst SettingsPage: React.FC = () => {\n  const [settings, setSettings] = useState<Settings>({\n    base_url: \"\",\n    company_name: \"\",\n    api_username: \"\",\n    api_password: \"\",\n    inventory_sync: {\n      conditions: [],\n      match_type: 'all',\n      warehouse_filter: '',\n      category_filter: '',\n      sync_interval: 'hourly',\n      last_sync: '',\n      sync_status: 'idle',\n      error_message: ''\n    }\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [dynamicOptions, setDynamicOptions] = useState<DynamicOptions>({\n    warehouses: [],\n    categories: [],\n    statuses: [],\n    types: [],\n    lastUpdated: {}\n  });\n  const [isRefreshing, setIsRefreshing] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchSettings = async () => {\n      setIsLoading(true);\n      try {\n        const response = await apiFetch({\n          path: \"/wp/v2/settings\",\n        }) as SettingsResponse;\n        \n        const spireSyncSettings = response.spire_sync_settings;\n        setSettings(spireSyncSettings);\n      } catch (err) {\n        setError(__(\"Failed to load settings\", \"spire-sync\"));\n        console.error(\"Error loading settings:\", err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSettings();\n  }, []);\n\n  const handleSave = async () => {\n    setIsSaving(true);\n    setMessage(\"\");\n    setError(\"\");\n\n    try {\n      // Encrypt the password first\n      const encryptedPassword = await apiFetch({\n        path: \"/spire-sync/v1/encrypt\",\n        method: \"POST\",\n        data: { data: settings.api_password }\n      }) as EncryptionResponse;\n\n      // Create a copy of settings with encrypted password\n      const settingsToSave = {\n        ...settings,\n        api_password: encryptedPassword.data\n      };\n\n      const response = await apiFetch({\n        path: \"/wp/v2/settings\",\n        method: \"POST\",\n        data: {\n          spire_sync_settings: settingsToSave,\n        },\n      });\n\n      setMessage(__(\"Settings saved successfully\", \"spire-sync\"));\n      console.log(\"Settings saved:\", response);\n    } catch (err) {\n      setError(__(\"Failed to save settings\", \"spire-sync\"));\n      console.error(\"Error saving settings:\", err);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const addCondition = () => {\n    setSettings(prev => {\n      const currentConditions = prev.inventory_sync?.conditions || [];\n      return {\n        ...prev,\n        inventory_sync: {\n          ...(prev.inventory_sync || {\n            match_type: 'all',\n            warehouse_filter: '',\n            category_filter: '',\n            sync_interval: 'hourly',\n            last_sync: '',\n            sync_status: 'idle',\n            error_message: ''\n          }),\n          conditions: [\n            ...currentConditions,\n            { key: '', value: '', operator: 'equals' }\n          ]\n        }\n      };\n    });\n  };\n\n  const removeCondition = (index: number) => {\n    setSettings(prev => {\n      const currentConditions = prev.inventory_sync?.conditions || [];\n      return {\n        ...prev,\n        inventory_sync: {\n          ...(prev.inventory_sync || {\n            match_type: 'all',\n            warehouse_filter: '',\n            category_filter: '',\n            sync_interval: 'hourly',\n            last_sync: '',\n            sync_status: 'idle',\n            error_message: ''\n          }),\n          conditions: currentConditions.filter((_, i) => i !== index)\n        }\n      };\n    });\n  };\n\n  const updateCondition = (index: number, field: keyof Condition, value: string) => {\n    setSettings(prev => {\n      const currentConditions = prev.inventory_sync?.conditions || [];\n      return {\n        ...prev,\n        inventory_sync: {\n          ...(prev.inventory_sync || {\n            match_type: 'all',\n            warehouse_filter: '',\n            category_filter: '',\n            sync_interval: 'hourly',\n            last_sync: '',\n            sync_status: 'idle',\n            error_message: ''\n          }),\n          conditions: currentConditions.map((condition, i) => \n            i === index ? { ...condition, [field]: value } : condition\n          )\n        }\n      };\n    });\n  };\n\n  const triggerSync = async () => {\n    setIsSaving(true);\n    setMessage(\"\");\n    setError(\"\");\n\n    try {\n      const response = await apiFetch({\n        path: \"/spire-sync/v1/inventory/sync\",\n        method: \"POST\"\n      });\n\n      setMessage(__(\"Sync started successfully\", \"spire-sync\"));\n    } catch (err) {\n      setError(__(\"Failed to start sync\", \"spire-sync\"));\n      console.error(\"Error starting sync:\", err);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const fetchDynamicOptions = async (type: keyof Omit<DynamicOptions, 'lastUpdated'>) => {\n    if (!settings.base_url || !settings.api_username || !settings.api_password) {\n      setError(__(\"Please configure API settings first\", \"spire-sync\"));\n      return;\n    }\n\n    setIsRefreshing(type);\n    try {\n      let endpoint = '';\n      switch (type) {\n        case 'warehouses':\n          endpoint = '/inventory/warehouses';\n          break;\n        case 'categories':\n          endpoint = '/inventory/categories';\n          break;\n        case 'statuses':\n          endpoint = '/inventory/statuses';\n          break;\n        case 'types':\n          endpoint = '/inventory/types';\n          break;\n      }\n\n      const response = await apiFetch({\n        path: `/spire_sync/v1${endpoint}`,\n        method: 'GET'\n      }) as ApiResponse;\n\n      if (response.success && Array.isArray(response.data)) {\n        setDynamicOptions(prev => ({\n          ...prev,\n          [type]: response.data,\n          lastUpdated: {\n            ...prev.lastUpdated,\n            [type]: new Date().toISOString()\n          }\n        }));\n      }\n    } catch (err) {\n      setError(__(`Failed to fetch ${type}`, \"spire-sync\"));\n      console.error(`Error fetching ${type}:`, err);\n    } finally {\n      setIsRefreshing(null);\n    }\n  };\n\n  const getFieldType = (field: string): keyof Omit<DynamicOptions, 'lastUpdated'> | null => {\n    switch (field) {\n      case 'whse':\n        return 'warehouses';\n      case 'category':\n        return 'categories';\n      case 'status':\n        return 'statuses';\n      case 'type':\n        return 'types';\n      default:\n        return null;\n    }\n  };\n\n  const getOptionsForField = (field: string): { label: string; value: string }[] => {\n    switch (field) {\n      case 'whse':\n        return dynamicOptions.warehouses.map(value => ({ label: value, value }));\n      case 'category':\n        return dynamicOptions.categories.map(value => ({ label: value, value }));\n      case 'status':\n        return dynamicOptions.statuses.map(value => ({ label: value, value }));\n      case 'type':\n        return dynamicOptions.types.map(value => ({ label: value, value }));\n      default:\n        return [];\n    }\n  };\n\n  const getLastUpdated = (field: string) => {\n    const type = getFieldType(field);\n    if (!type) return __('Never', 'spire-sync');\n    const date = dynamicOptions.lastUpdated[type];\n    if (!date) return __('Never', 'spire-sync');\n    return new Date(date).toLocaleString();\n  };\n\n  if (isLoading) {\n    return <div>{__(\"Loading...\", \"spire-sync\")}</div>;\n  }\n\n  return (\n    <div className=\"spire-sync-settings-container\">\n      <h1>{__(\"Spire Sync Settings\", \"spire-sync\")}</h1>\n\n      {message && (\n        <Notice status=\"success\" isDismissible onDismiss={() => setMessage(\"\")}>\n          {message}\n        </Notice>\n      )}\n\n      {error && (\n        <Notice status=\"error\" isDismissible onDismiss={() => setError(\"\")}>\n          {error}\n        </Notice>\n      )}\n\n      <Panel header=\"Settings\">\n        <React.Fragment key=\"0\">\n          <PanelBody\n            title={__(\"API Settings\", \"spire-sync\")}\n            initialOpen={true}\n          >\n            <PanelRow>\n              <InputControl\n                __next40pxDefaultSize\n                label={__(\"Base URL\", \"spire-sync\")}\n                value={settings.base_url}\n                onChange={(value) =>\n                  setSettings({ ...settings, base_url: value || \"\" })\n                }\n                help={__(\n                  \"Enter the base URL for the Spire API (e.g., http://example.com/api/v2)\",\n                  \"spire-sync\"\n                )}\n                style={{ width: \"400px\" }}\n              />\n            </PanelRow>\n            <PanelRow>\n              <InputControl\n                __next40pxDefaultSize\n                label={__(\"Company Name\", \"spire-sync\")}\n                value={settings.company_name}\n                onChange={(value) =>\n                  setSettings({ ...settings, company_name: value || \"\" })\n                }\n                style={{ width: \"400px\" }}\n              />\n            </PanelRow>\n            <PanelRow>\n              <InputControl\n                __next40pxDefaultSize\n                label={__(\"API Username\", \"spire-sync\")}\n                value={settings.api_username}\n                onChange={(value) =>\n                  setSettings({ ...settings, api_username: value || \"\" })\n                }\n                style={{ width: \"400px\" }}\n              />\n            </PanelRow>\n            <PanelRow>\n              <InputControl\n                __next40pxDefaultSize\n                label={__(\"API Password\", \"spire-sync\")}\n                type=\"password\"\n                value={settings.api_password}\n                onChange={(value) =>\n                  setSettings({ ...settings, api_password: value || \"\" })\n                }\n                style={{ width: \"400px\" }}\n              />\n            </PanelRow>\n          </PanelBody>\n\n          <PanelBody\n            title={__(\"Inventory Sync Settings\", \"spire-sync\")}\n            initialOpen={true}\n          >\n            <div className=\"spire-sync-conditions\">\n              <h3>{__(\"Sync Conditions\", \"spire-sync\")}</h3>\n              <RadioControl\n                label={__(\"Match Type\", \"spire-sync\")}\n                selected={settings.inventory_sync?.match_type || 'all'}\n                options={[\n                  { label: __('All conditions must be met', 'spire-sync'), value: 'all' },\n                  { label: __('Any condition must be met', 'spire-sync'), value: 'any' }\n                ]}\n                onChange={(value) => setSettings(prev => ({\n                  ...prev,\n                  inventory_sync: {\n                    ...(prev.inventory_sync || {\n                      conditions: [],\n                      match_type: 'all',\n                      warehouse_filter: '',\n                      category_filter: '',\n                      sync_interval: 'hourly',\n                      last_sync: '',\n                      sync_status: 'idle',\n                      error_message: ''\n                    }),\n                    match_type: value as 'all' | 'any'\n                  }\n                }))}\n              />\n\n              <div className=\"spire-sync-conditions-list\">\n                {(settings.inventory_sync?.conditions || []).map((condition, index) => (\n                  <div key={index} className=\"spire-sync-condition\">\n                    <div className=\"spire-sync-condition-fields\">\n                      <SelectControl\n                        label={__(\"Field\", \"spire-sync\")}\n                        value={condition.key}\n                        options={[\n                          { label: __('Select a field', 'spire-sync'), value: '' },\n                          ...Object.entries(INVENTORY_FILTER_FIELDS).map(([key, label]) => ({\n                            label,\n                            value: key\n                          }))\n                        ]}\n                        onChange={(value) => updateCondition(index, 'key', value)}\n                      />\n                      <SelectControl\n                        label={__(\"Operator\", \"spire-sync\")}\n                        value={condition.operator}\n                        options={[\n                          { label: __('Select an operator', 'spire-sync'), value: '' },\n                          ...Object.entries(CONDITION_OPERATORS).map(([key, label]) => ({\n                            label,\n                            value: key\n                          }))\n                        ]}\n                        onChange={(value) => updateCondition(index, 'operator', value)}\n                      />\n                      <div className=\"spire-sync-condition-value\">\n                        <SelectControl\n                          label={__(\"Value\", \"spire-sync\")}\n                          value={condition.value}\n                          options={[\n                            { label: __('Select a value', 'spire-sync'), value: '' },\n                            ...getOptionsForField(condition.key)\n                          ]}\n                          onChange={(value) => updateCondition(index, 'value', value)}\n                        />\n                        {['whse', 'category', 'status', 'type'].includes(condition.key) && (\n                          <div className=\"spire-sync-condition-value-actions\">\n                            <Button\n                              isSmall\n                              onClick={() => {\n                                const type = getFieldType(condition.key);\n                                if (type) {\n                                  fetchDynamicOptions(type);\n                                }\n                              }}\n                              disabled={isRefreshing === getFieldType(condition.key)}\n                            >\n                              {isRefreshing === getFieldType(condition.key) ? (\n                                <Spinner />\n                              ) : (\n                                __('Refresh', 'spire-sync')\n                              )}\n                            </Button>\n                            <span className=\"spire-sync-last-updated\">\n                              {__('Last updated:', 'spire-sync')} {getLastUpdated(condition.key)}\n                            </span>\n                          </div>\n                        )}\n                      </div>\n                      <Button\n                        isDestructive\n                        onClick={() => removeCondition(index)}\n                        className=\"spire-sync-remove-condition\"\n                      >\n                        {__(\"Remove\", \"spire-sync\")}\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              <Button\n                isPrimary\n                onClick={addCondition}\n                className=\"spire-sync-add-condition\"\n              >\n                {__(\"Add Condition\", \"spire-sync\")}\n              </Button>\n            </div>\n\n            <div className=\"spire-sync-filters\">\n              <h3>{__(\"Additional Filters\", \"spire-sync\")}</h3>\n              <InputControl\n                __next40pxDefaultSize\n                label={__(\"Warehouse Filter\", \"spire-sync\")}\n                value={settings.inventory_sync?.warehouse_filter || ''}\n                onChange={(value) => setSettings(prev => ({\n                  ...prev,\n                  inventory_sync: {\n                    ...prev.inventory_sync!,\n                    warehouse_filter: value || ''\n                  }\n                }))}\n                help={__(\"Optional: Filter by specific warehouse\", \"spire-sync\")}\n              />\n              <InputControl\n                __next40pxDefaultSize\n                label={__(\"Category Filter\", \"spire-sync\")}\n                value={settings.inventory_sync?.category_filter || ''}\n                onChange={(value) => setSettings(prev => ({\n                  ...prev,\n                  inventory_sync: {\n                    ...prev.inventory_sync!,\n                    category_filter: value || ''\n                  }\n                }))}\n                help={__(\"Optional: Filter by specific category\", \"spire-sync\")}\n              />\n            </div>\n\n            <div className=\"spire-sync-schedule\">\n              <h3>{__(\"Sync Schedule\", \"spire-sync\")}</h3>\n              <SelectControl\n                label={__(\"Sync Interval\", \"spire-sync\")}\n                value={settings.inventory_sync?.sync_interval || 'hourly'}\n                options={[\n                  { label: __('Hourly', 'spire-sync'), value: 'hourly' },\n                  { label: __('Daily', 'spire-sync'), value: 'daily' },\n                  { label: __('Weekly', 'spire-sync'), value: 'weekly' }\n                ]}\n                onChange={(value) => setSettings(prev => ({\n                  ...prev,\n                  inventory_sync: {\n                    ...prev.inventory_sync!,\n                    sync_interval: value as 'hourly' | 'daily' | 'weekly'\n                  }\n                }))}\n              />\n            </div>\n\n            <div className=\"spire-sync-status\">\n              <h3>{__(\"Sync Status\", \"spire-sync\")}</h3>\n              <p>\n                {__(\"Last Sync:\", \"spire-sync\")} {settings.inventory_sync?.last_sync || __('Never', 'spire-sync')}\n              </p>\n              <p>\n                {__(\"Status:\", \"spire-sync\")} {settings.inventory_sync?.sync_status || 'idle'}\n              </p>\n              {settings.inventory_sync?.error_message && (\n                <Notice status=\"error\" isDismissible={false}>\n                  {settings.inventory_sync.error_message}\n                </Notice>\n              )}\n            </div>\n          </PanelBody>\n        </React.Fragment>\n      </Panel>\n\n      <div className=\"spire-sync-actions\">\n        <Button variant=\"primary\" onClick={handleSave} disabled={isSaving}>\n          {isSaving\n            ? __(\"Saving...\", \"spire-sync\")\n            : __(\"Save Settings\", \"spire-sync\")}\n        </Button>\n        <Button variant=\"secondary\" onClick={triggerSync} disabled={isSaving}>\n          {isSaving\n            ? __(\"Starting Sync...\", \"spire-sync\")\n            : __(\"Sync Now\", \"spire-sync\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsPage;\n","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"React\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React from 'react';\nimport { createRoot } from '@wordpress/element';\nimport Settings from './Settings';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.getElementById('spire-sync-settings-root');\n  if (container) {\n    const root = createRoot(container);\n    root.render(<Settings />);\n  }\n});"],"names":["React","useEffect","useState","__","Panel","PanelBody","PanelRow","__experimentalInputControl","InputControl","Button","Notice","SelectControl","RadioControl","Spinner","apiFetch","jsx","_jsx","jsxs","_jsxs","INVENTORY_FILTER_FIELDS","upload","status","whse","category","type","active","price","stock","min_stock","max_stock","taxable","weight","length","width","height","CONDITION_OPERATORS","equals","not_equals","contains","greater_than","less_than","SettingsPage","settings","setSettings","base_url","company_name","api_username","api_password","inventory_sync","conditions","match_type","warehouse_filter","category_filter","sync_interval","last_sync","sync_status","error_message","isLoading","setIsLoading","isSaving","setIsSaving","message","setMessage","error","setError","dynamicOptions","setDynamicOptions","warehouses","categories","statuses","types","lastUpdated","isRefreshing","setIsRefreshing","fetchSettings","response","path","spireSyncSettings","spire_sync_settings","err","console","handleSave","encryptedPassword","method","data","settingsToSave","log","addCondition","prev","currentConditions","key","value","operator","removeCondition","index","filter","_","i","updateCondition","field","map","condition","triggerSync","fetchDynamicOptions","endpoint","success","Array","isArray","Date","toISOString","getFieldType","getOptionsForField","label","getLastUpdated","date","toLocaleString","children","className","isDismissible","onDismiss","header","Fragment","title","initialOpen","__next40pxDefaultSize","onChange","help","style","selected","options","Object","entries","includes","isSmall","onClick","disabled","isDestructive","isPrimary","variant","createRoot","Settings","document","addEventListener","container","getElementById","root","render"],"sourceRoot":""}